// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bubbleSort (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inputArray_address0,
        inputArray_ce0,
        inputArray_we0,
        inputArray_d0,
        inputArray_q0,
        inputArray_address1,
        inputArray_ce1,
        inputArray_we1,
        inputArray_d1,
        inputArray_q1
);

parameter    ap_ST_fsm_state1 = 41'd1;
parameter    ap_ST_fsm_state2 = 41'd2;
parameter    ap_ST_fsm_state3 = 41'd4;
parameter    ap_ST_fsm_state4 = 41'd8;
parameter    ap_ST_fsm_state5 = 41'd16;
parameter    ap_ST_fsm_state6 = 41'd32;
parameter    ap_ST_fsm_state7 = 41'd64;
parameter    ap_ST_fsm_state8 = 41'd128;
parameter    ap_ST_fsm_state9 = 41'd256;
parameter    ap_ST_fsm_state10 = 41'd512;
parameter    ap_ST_fsm_state11 = 41'd1024;
parameter    ap_ST_fsm_state12 = 41'd2048;
parameter    ap_ST_fsm_state13 = 41'd4096;
parameter    ap_ST_fsm_state14 = 41'd8192;
parameter    ap_ST_fsm_state15 = 41'd16384;
parameter    ap_ST_fsm_state16 = 41'd32768;
parameter    ap_ST_fsm_state17 = 41'd65536;
parameter    ap_ST_fsm_state18 = 41'd131072;
parameter    ap_ST_fsm_state19 = 41'd262144;
parameter    ap_ST_fsm_state20 = 41'd524288;
parameter    ap_ST_fsm_state21 = 41'd1048576;
parameter    ap_ST_fsm_state22 = 41'd2097152;
parameter    ap_ST_fsm_state23 = 41'd4194304;
parameter    ap_ST_fsm_state24 = 41'd8388608;
parameter    ap_ST_fsm_state25 = 41'd16777216;
parameter    ap_ST_fsm_state26 = 41'd33554432;
parameter    ap_ST_fsm_state27 = 41'd67108864;
parameter    ap_ST_fsm_state28 = 41'd134217728;
parameter    ap_ST_fsm_state29 = 41'd268435456;
parameter    ap_ST_fsm_state30 = 41'd536870912;
parameter    ap_ST_fsm_state31 = 41'd1073741824;
parameter    ap_ST_fsm_state32 = 41'd2147483648;
parameter    ap_ST_fsm_state33 = 41'd4294967296;
parameter    ap_ST_fsm_state34 = 41'd8589934592;
parameter    ap_ST_fsm_state35 = 41'd17179869184;
parameter    ap_ST_fsm_state36 = 41'd34359738368;
parameter    ap_ST_fsm_state37 = 41'd68719476736;
parameter    ap_ST_fsm_state38 = 41'd137438953472;
parameter    ap_ST_fsm_state39 = 41'd274877906944;
parameter    ap_ST_fsm_state40 = 41'd549755813888;
parameter    ap_ST_fsm_state41 = 41'd1099511627776;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] inputArray_address0;
output   inputArray_ce0;
output   inputArray_we0;
output  [31:0] inputArray_d0;
input  [31:0] inputArray_q0;
output  [3:0] inputArray_address1;
output   inputArray_ce1;
output   inputArray_we1;
output  [31:0] inputArray_d1;
input  [31:0] inputArray_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] inputArray_address0;
reg inputArray_ce0;
reg inputArray_we0;
reg[31:0] inputArray_d0;
reg[3:0] inputArray_address1;
reg inputArray_ce1;
reg inputArray_we1;
reg[31:0] inputArray_d1;

(* fsm_encoding = "none" *) reg   [40:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_923;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state13;
reg   [31:0] reg_938;
wire    ap_CS_fsm_state19;
reg   [31:0] reg_947;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state11;
wire   [3:0] inputArray_addr_reg_1174;
wire   [3:0] inputArray_addr_1_reg_1180;
wire   [0:0] tmp_3_fu_958_p2;
reg   [0:0] tmp_3_reg_1186;
wire   [3:0] inputArray_addr_2_reg_1190;
wire   [0:0] tmp_3_0_1_fu_964_p2;
reg   [0:0] tmp_3_0_1_reg_1196;
wire   [3:0] inputArray_addr_3_reg_1200;
wire   [0:0] tmp_3_1_fu_970_p2;
reg   [0:0] tmp_3_1_reg_1206;
wire   [0:0] tmp_3_0_2_fu_976_p2;
reg   [0:0] tmp_3_0_2_reg_1210;
wire    ap_CS_fsm_state5;
wire   [3:0] inputArray_addr_4_reg_1214;
wire   [0:0] tmp_3_0_3_fu_982_p2;
reg   [0:0] tmp_3_0_3_reg_1220;
wire   [3:0] inputArray_addr_5_reg_1224;
wire   [0:0] tmp_3_1_1_fu_988_p2;
reg   [0:0] tmp_3_1_1_reg_1229;
wire   [0:0] tmp_3_1_2_fu_994_p2;
reg   [0:0] tmp_3_1_2_reg_1233;
wire    ap_CS_fsm_state8;
wire   [0:0] tmp_3_2_fu_1000_p2;
reg   [0:0] tmp_3_2_reg_1237;
wire   [0:0] tmp_3_2_1_fu_1006_p2;
reg   [0:0] tmp_3_2_1_reg_1241;
wire    ap_CS_fsm_state9;
wire   [0:0] tmp_3_0_4_fu_1012_p2;
reg   [0:0] tmp_3_0_4_reg_1245;
wire    ap_CS_fsm_state10;
wire   [3:0] inputArray_addr_6_reg_1249;
wire   [0:0] tmp_3_0_5_fu_1018_p2;
reg   [0:0] tmp_3_0_5_reg_1255;
wire    ap_CS_fsm_state12;
wire   [3:0] inputArray_addr_7_reg_1259;
wire   [0:0] tmp_3_3_fu_1024_p2;
reg   [0:0] tmp_3_3_reg_1265;
wire   [0:0] tmp_3_1_3_fu_1030_p2;
reg   [0:0] tmp_3_1_3_reg_1269;
wire   [0:0] tmp_3_2_2_fu_1036_p2;
reg   [0:0] tmp_3_2_2_reg_1273;
wire    ap_CS_fsm_state14;
wire   [0:0] tmp_3_3_1_fu_1042_p2;
reg   [0:0] tmp_3_3_1_reg_1277;
wire    ap_CS_fsm_state15;
wire   [0:0] tmp_3_0_6_fu_1048_p2;
reg   [0:0] tmp_3_0_6_reg_1281;
wire    ap_CS_fsm_state17;
wire   [0:0] tmp_3_1_4_fu_1054_p2;
reg   [0:0] tmp_3_1_4_reg_1285;
wire   [3:0] inputArray_addr_8_reg_1289;
wire    ap_CS_fsm_state18;
wire   [0:0] tmp_3_1_5_fu_1060_p2;
reg   [0:0] tmp_3_1_5_reg_1294;
wire   [0:0] tmp_3_2_3_fu_1066_p2;
reg   [0:0] tmp_3_2_3_reg_1298;
wire   [0:0] tmp_3_4_fu_1072_p2;
reg   [0:0] tmp_3_4_reg_1302;
wire   [0:0] tmp_3_0_7_fu_1078_p2;
reg   [0:0] tmp_3_0_7_reg_1306;
wire   [0:0] tmp_3_2_4_fu_1084_p2;
reg   [0:0] tmp_3_2_4_reg_1310;
wire   [0:0] tmp_3_3_2_fu_1090_p2;
reg   [0:0] tmp_3_3_2_reg_1314;
wire   [0:0] tmp_3_1_6_fu_1096_p2;
reg   [0:0] tmp_3_1_6_reg_1318;
wire    ap_CS_fsm_state20;
wire   [0:0] tmp_3_3_3_fu_1102_p2;
reg   [0:0] tmp_3_3_3_reg_1322;
wire   [0:0] tmp_3_2_5_fu_1108_p2;
reg   [0:0] tmp_3_2_5_reg_1326;
wire    ap_CS_fsm_state21;
wire   [0:0] tmp_3_3_4_fu_1114_p2;
reg   [0:0] tmp_3_3_4_reg_1330;
wire   [0:0] tmp_3_4_1_fu_1120_p2;
reg   [0:0] tmp_3_4_1_reg_1334;
wire   [0:0] tmp_3_4_2_fu_1126_p2;
reg   [0:0] tmp_3_4_2_reg_1338;
wire    ap_CS_fsm_state25;
wire   [0:0] tmp_3_4_3_fu_1132_p2;
reg   [0:0] tmp_3_4_3_reg_1342;
wire   [0:0] tmp_3_5_fu_1138_p2;
reg   [0:0] tmp_3_5_reg_1346;
wire   [0:0] tmp_3_5_1_fu_1144_p2;
reg   [0:0] tmp_3_5_1_reg_1350;
wire    ap_CS_fsm_state28;
wire   [0:0] tmp_3_5_2_fu_1150_p2;
reg   [0:0] tmp_3_5_2_reg_1354;
wire    ap_CS_fsm_state32;
wire   [0:0] tmp_3_6_fu_1156_p2;
reg   [0:0] tmp_3_6_reg_1358;
wire   [0:0] tmp_3_6_1_fu_1162_p2;
reg   [0:0] tmp_3_6_1_reg_1362;
wire    ap_CS_fsm_state36;
wire   [0:0] tmp_3_7_fu_1168_p2;
reg   [0:0] tmp_3_7_reg_1366;
wire    ap_CS_fsm_state38;
reg   [31:0] p_tmp_8_reg_122;
reg   [31:0] p_tmp_1_reg_133;
reg   [31:0] ap_phi_mux_p_b_read_assign_8_phi_fu_148_p4;
reg   [31:0] p_b_read_assign_8_reg_144;
reg   [31:0] p_tmp_2_reg_156;
reg   [31:0] p_b_read_assign_9_reg_168;
reg   [31:0] p_tmp_3_reg_180;
reg   [31:0] p_tmp_15_reg_192;
reg   [31:0] p_tmp_9_reg_205;
reg   [31:0] p_b_read_assign_s_reg_218;
reg   [31:0] p_b_read_assign_5_reg_230;
reg   [31:0] p_tmp_10_reg_243;
reg   [31:0] p_b_read_assign_6_reg_256;
reg   [31:0] p_tmp_21_reg_269;
reg   [31:0] p_tmp_16_reg_282;
reg   [31:0] p_tmp_4_reg_295;
reg   [31:0] p_tmp_11_reg_307;
reg   [31:0] p_b_read_assign_1_reg_320;
reg   [31:0] p_tmp_5_reg_332;
reg   [31:0] p_b_read_assign_13_reg_344;
reg   [31:0] p_tmp_17_reg_357;
reg   [31:0] p_b_read_assign_7_reg_370;
reg   [31:0] p_b_read_assign_14_reg_383;
reg   [31:0] p_tmp_26_reg_396;
reg   [31:0] p_tmp_22_reg_409;
reg   [31:0] p_tmp_12_reg_422;
reg   [31:0] p_b_read_assign_2_reg_435;
wire    ap_CS_fsm_state16;
reg   [31:0] p_tmp_6_reg_447;
reg   [31:0] p_tmp_18_reg_459;
reg   [31:0] p_b_read_assign_3_reg_472;
reg   [31:0] p_b_read_assign_10_reg_484;
reg   [31:0] p_tmp_13_reg_497;
reg   [31:0] p_b_read_assign_18_reg_510;
reg   [31:0] p_tmp_23_reg_523;
reg   [31:0] p_tmp_7_reg_536;
reg   [31:0] p_b_read_assign_11_reg_548;
reg   [31:0] p_b_read_assign_15_reg_561;
reg   [31:0] p_tmp_19_reg_574;
reg   [31:0] p_b_read_assign_4_reg_587;
reg   [31:0] p_tmp_14_reg_599;
reg   [31:0] p_b_read_assign_16_reg_612;
reg   [31:0] p_b_read_assign_19_reg_625;
reg   [31:0] p_tmp_24_reg_638;
reg   [31:0] p_b_read_assign_12_reg_651;
reg   [31:0] p_tmp_20_reg_664;
reg   [31:0] ap_phi_mux_p_b_read_assign_17_phi_fu_681_p4;
reg   [31:0] p_b_read_assign_17_reg_677;
reg   [31:0] p_b_read_assign_20_reg_690;
reg   [31:0] p_tmp_25_reg_703;
reg   [31:0] p_b_read_assign_21_reg_716;
reg   [31:0] p_tmp_30_reg_729;
reg   [31:0] ap_phi_mux_p_tmp_27_phi_fu_746_p4;
reg   [31:0] p_tmp_27_reg_742;
reg   [31:0] p_b_read_assign_22_reg_755;
wire    ap_CS_fsm_state24;
reg   [31:0] p_tmp_28_reg_768;
reg   [31:0] p_b_read_assign_23_reg_781;
reg   [31:0] ap_phi_mux_p_tmp_29_phi_fu_798_p4;
reg   [31:0] p_tmp_29_reg_794;
reg   [31:0] p_b_read_assign_24_reg_807;
reg   [31:0] p_tmp_33_reg_820;
wire    ap_CS_fsm_state27;
reg   [31:0] p_tmp_31_reg_833;
reg   [31:0] ap_phi_mux_p_b_read_assign_25_phi_fu_850_p4;
reg   [31:0] p_b_read_assign_25_reg_846;
reg   [31:0] ap_phi_mux_p_tmp_32_phi_fu_863_p4;
reg   [31:0] p_tmp_32_reg_859;
reg   [31:0] p_b_read_assign_26_reg_872;
reg   [31:0] p_tmp_35_reg_885;
wire    ap_CS_fsm_state35;
reg   [31:0] p_tmp_34_reg_898;
reg   [31:0] p_b_read_assign_27_reg_911;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
reg   [40:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 41'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        if ((tmp_3_1_4_fu_1054_p2 == 1'd0)) begin
            p_b_read_assign_10_reg_484 <= p_tmp_12_reg_422;
        end else if ((tmp_3_1_4_fu_1054_p2 == 1'd1)) begin
            p_b_read_assign_10_reg_484 <= p_b_read_assign_2_reg_435;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        if ((tmp_3_1_5_fu_1060_p2 == 1'd0)) begin
            p_b_read_assign_11_reg_548 <= p_tmp_13_reg_497;
        end else if ((tmp_3_1_5_fu_1060_p2 == 1'd1)) begin
            p_b_read_assign_11_reg_548 <= p_b_read_assign_3_reg_472;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        if ((tmp_3_1_6_fu_1096_p2 == 1'd0)) begin
            p_b_read_assign_12_reg_651 <= p_tmp_14_reg_599;
        end else if ((tmp_3_1_6_fu_1096_p2 == 1'd1)) begin
            p_b_read_assign_12_reg_651 <= p_b_read_assign_4_reg_587;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_3_2_1_fu_1006_p2 == 1'd0))) begin
        p_b_read_assign_13_reg_344 <= p_tmp_16_reg_282;
    end else if (((1'b1 == ap_CS_fsm_state11) & (tmp_3_2_1_reg_1241 == 1'd1))) begin
        p_b_read_assign_13_reg_344 <= p_b_read_assign_6_reg_256;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        if ((tmp_3_2_2_fu_1036_p2 == 1'd0)) begin
            p_b_read_assign_14_reg_383 <= p_tmp_17_reg_357;
        end else if ((tmp_3_2_2_fu_1036_p2 == 1'd1)) begin
            p_b_read_assign_14_reg_383 <= p_b_read_assign_7_reg_370;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        if ((tmp_3_2_3_fu_1066_p2 == 1'd0)) begin
            p_b_read_assign_15_reg_561 <= p_tmp_18_reg_459;
        end else if ((tmp_3_2_3_fu_1066_p2 == 1'd1)) begin
            p_b_read_assign_15_reg_561 <= p_b_read_assign_10_reg_484;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        if ((tmp_3_2_4_fu_1084_p2 == 1'd0)) begin
            p_b_read_assign_16_reg_612 <= p_tmp_19_reg_574;
        end else if ((tmp_3_2_4_fu_1084_p2 == 1'd1)) begin
            p_b_read_assign_16_reg_612 <= p_b_read_assign_11_reg_548;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        if ((tmp_3_2_5_fu_1108_p2 == 1'd0)) begin
            p_b_read_assign_17_reg_677 <= p_tmp_20_reg_664;
        end else if ((tmp_3_2_5_fu_1108_p2 == 1'd1)) begin
            p_b_read_assign_17_reg_677 <= p_b_read_assign_12_reg_651;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_3_3_1_fu_1042_p2 == 1'd0))) begin
        p_b_read_assign_18_reg_510 <= p_tmp_22_reg_409;
    end else if (((1'b1 == ap_CS_fsm_state17) & (tmp_3_3_1_reg_1277 == 1'd1))) begin
        p_b_read_assign_18_reg_510 <= p_b_read_assign_14_reg_383;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        if ((tmp_3_3_2_fu_1090_p2 == 1'd0)) begin
            p_b_read_assign_19_reg_625 <= p_tmp_23_reg_523;
        end else if ((tmp_3_3_2_fu_1090_p2 == 1'd1)) begin
            p_b_read_assign_19_reg_625 <= p_b_read_assign_15_reg_561;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (tmp_3_0_4_fu_1012_p2 == 1'd0))) begin
        p_b_read_assign_1_reg_320 <= p_tmp_4_reg_295;
    end else if (((1'b1 == ap_CS_fsm_state11) & (tmp_3_0_4_reg_1245 == 1'd1))) begin
        p_b_read_assign_1_reg_320 <= reg_923;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        if ((tmp_3_3_3_fu_1102_p2 == 1'd0)) begin
            p_b_read_assign_20_reg_690 <= p_tmp_24_reg_638;
        end else if ((tmp_3_3_3_fu_1102_p2 == 1'd1)) begin
            p_b_read_assign_20_reg_690 <= p_b_read_assign_16_reg_612;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        if ((tmp_3_3_4_fu_1114_p2 == 1'd0)) begin
            p_b_read_assign_21_reg_716 <= p_tmp_25_reg_703;
        end else if ((tmp_3_3_4_fu_1114_p2 == 1'd1)) begin
            p_b_read_assign_21_reg_716 <= ap_phi_mux_p_b_read_assign_17_phi_fu_681_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_4_1_fu_1120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        p_b_read_assign_22_reg_755 <= ap_phi_mux_p_tmp_27_phi_fu_746_p4;
    end else if (((tmp_3_4_1_reg_1334 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        p_b_read_assign_22_reg_755 <= p_b_read_assign_19_reg_625;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        if ((tmp_3_4_2_fu_1126_p2 == 1'd0)) begin
            p_b_read_assign_23_reg_781 <= p_tmp_28_reg_768;
        end else if ((tmp_3_4_2_fu_1126_p2 == 1'd1)) begin
            p_b_read_assign_23_reg_781 <= p_b_read_assign_20_reg_690;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        if ((tmp_3_4_3_fu_1132_p2 == 1'd0)) begin
            p_b_read_assign_24_reg_807 <= ap_phi_mux_p_tmp_29_phi_fu_798_p4;
        end else if ((tmp_3_4_3_fu_1132_p2 == 1'd1)) begin
            p_b_read_assign_24_reg_807 <= p_b_read_assign_21_reg_716;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_5_1_fu_1144_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        p_b_read_assign_25_reg_846 <= p_tmp_31_reg_833;
    end else if (((tmp_3_5_1_reg_1350 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        p_b_read_assign_25_reg_846 <= p_b_read_assign_23_reg_781;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        if ((tmp_3_5_2_fu_1150_p2 == 1'd0)) begin
            p_b_read_assign_26_reg_872 <= ap_phi_mux_p_tmp_32_phi_fu_863_p4;
        end else if ((tmp_3_5_2_fu_1150_p2 == 1'd1)) begin
            p_b_read_assign_26_reg_872 <= p_b_read_assign_24_reg_807;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_6_1_fu_1162_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        p_b_read_assign_27_reg_911 <= p_tmp_34_reg_898;
    end else if (((tmp_3_6_1_reg_1362 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        p_b_read_assign_27_reg_911 <= p_b_read_assign_26_reg_872;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (tmp_3_0_5_fu_1018_p2 == 1'd0))) begin
        p_b_read_assign_2_reg_435 <= p_tmp_5_reg_332;
    end else if (((1'b1 == ap_CS_fsm_state16) & (tmp_3_0_5_reg_1255 == 1'd1))) begin
        p_b_read_assign_2_reg_435 <= reg_947;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        if ((tmp_3_0_6_fu_1048_p2 == 1'd0)) begin
            p_b_read_assign_3_reg_472 <= p_tmp_6_reg_447;
        end else if ((tmp_3_0_6_fu_1048_p2 == 1'd1)) begin
            p_b_read_assign_3_reg_472 <= reg_923;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        if ((tmp_3_0_7_fu_1078_p2 == 1'd0)) begin
            p_b_read_assign_4_reg_587 <= p_tmp_7_reg_536;
        end else if ((tmp_3_0_7_fu_1078_p2 == 1'd1)) begin
            p_b_read_assign_4_reg_587 <= inputArray_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_3_1_1_fu_988_p2 == 1'd0))) begin
        p_b_read_assign_5_reg_230 <= p_tmp_9_reg_205;
    end else if (((1'b1 == ap_CS_fsm_state7) & (tmp_3_1_1_reg_1229 == 1'd1))) begin
        p_b_read_assign_5_reg_230 <= p_b_read_assign_9_reg_168;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((tmp_3_1_2_fu_994_p2 == 1'd0)) begin
            p_b_read_assign_6_reg_256 <= p_tmp_10_reg_243;
        end else if ((tmp_3_1_2_fu_994_p2 == 1'd1)) begin
            p_b_read_assign_6_reg_256 <= p_b_read_assign_s_reg_218;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        if ((tmp_3_1_3_fu_1030_p2 == 1'd0)) begin
            p_b_read_assign_7_reg_370 <= p_tmp_11_reg_307;
        end else if ((tmp_3_1_3_fu_1030_p2 == 1'd1)) begin
            p_b_read_assign_7_reg_370 <= p_b_read_assign_1_reg_320;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_3_0_1_fu_964_p2 == 1'd0))) begin
        p_b_read_assign_8_reg_144 <= p_tmp_1_reg_133;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_3_0_1_reg_1196 == 1'd1))) begin
        p_b_read_assign_8_reg_144 <= reg_947;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((tmp_3_0_2_fu_976_p2 == 1'd0)) begin
            p_b_read_assign_9_reg_168 <= p_tmp_2_reg_156;
        end else if ((tmp_3_0_2_fu_976_p2 == 1'd1)) begin
            p_b_read_assign_9_reg_168 <= reg_923;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_3_0_3_fu_982_p2 == 1'd0))) begin
        p_b_read_assign_s_reg_218 <= p_tmp_3_reg_180;
    end else if (((1'b1 == ap_CS_fsm_state7) & (tmp_3_0_3_reg_1220 == 1'd1))) begin
        p_b_read_assign_s_reg_218 <= reg_947;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_3_1_1_fu_988_p2 == 1'd0))) begin
        p_tmp_10_reg_243 <= p_b_read_assign_9_reg_168;
    end else if (((1'b1 == ap_CS_fsm_state7) & (tmp_3_1_1_reg_1229 == 1'd1))) begin
        p_tmp_10_reg_243 <= p_tmp_9_reg_205;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((tmp_3_1_2_fu_994_p2 == 1'd0)) begin
            p_tmp_11_reg_307 <= p_b_read_assign_s_reg_218;
        end else if ((tmp_3_1_2_fu_994_p2 == 1'd1)) begin
            p_tmp_11_reg_307 <= p_tmp_10_reg_243;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        if ((tmp_3_1_3_fu_1030_p2 == 1'd0)) begin
            p_tmp_12_reg_422 <= p_b_read_assign_1_reg_320;
        end else if ((tmp_3_1_3_fu_1030_p2 == 1'd1)) begin
            p_tmp_12_reg_422 <= p_tmp_11_reg_307;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        if ((tmp_3_1_4_fu_1054_p2 == 1'd0)) begin
            p_tmp_13_reg_497 <= p_b_read_assign_2_reg_435;
        end else if ((tmp_3_1_4_fu_1054_p2 == 1'd1)) begin
            p_tmp_13_reg_497 <= p_tmp_12_reg_422;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        if ((tmp_3_1_5_fu_1060_p2 == 1'd0)) begin
            p_tmp_14_reg_599 <= p_b_read_assign_3_reg_472;
        end else if ((tmp_3_1_5_fu_1060_p2 == 1'd1)) begin
            p_tmp_14_reg_599 <= p_tmp_13_reg_497;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_3_1_fu_970_p2 == 1'd0))) begin
        p_tmp_15_reg_192 <= p_tmp_8_reg_122;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_3_1_reg_1206 == 1'd1))) begin
        p_tmp_15_reg_192 <= p_b_read_assign_8_reg_144;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((tmp_3_2_fu_1000_p2 == 1'd0)) begin
            p_tmp_16_reg_282 <= p_b_read_assign_5_reg_230;
        end else if ((tmp_3_2_fu_1000_p2 == 1'd1)) begin
            p_tmp_16_reg_282 <= p_tmp_15_reg_192;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_3_2_1_fu_1006_p2 == 1'd0))) begin
        p_tmp_17_reg_357 <= p_b_read_assign_6_reg_256;
    end else if (((1'b1 == ap_CS_fsm_state11) & (tmp_3_2_1_reg_1241 == 1'd1))) begin
        p_tmp_17_reg_357 <= p_tmp_16_reg_282;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        if ((tmp_3_2_2_fu_1036_p2 == 1'd0)) begin
            p_tmp_18_reg_459 <= p_b_read_assign_7_reg_370;
        end else if ((tmp_3_2_2_fu_1036_p2 == 1'd1)) begin
            p_tmp_18_reg_459 <= p_tmp_17_reg_357;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        if ((tmp_3_2_3_fu_1066_p2 == 1'd0)) begin
            p_tmp_19_reg_574 <= p_b_read_assign_10_reg_484;
        end else if ((tmp_3_2_3_fu_1066_p2 == 1'd1)) begin
            p_tmp_19_reg_574 <= p_tmp_18_reg_459;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((tmp_3_fu_958_p2 == 1'd0)) begin
            p_tmp_1_reg_133 <= inputArray_q1;
        end else if ((tmp_3_fu_958_p2 == 1'd1)) begin
            p_tmp_1_reg_133 <= inputArray_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        if ((tmp_3_2_4_fu_1084_p2 == 1'd0)) begin
            p_tmp_20_reg_664 <= p_b_read_assign_11_reg_548;
        end else if ((tmp_3_2_4_fu_1084_p2 == 1'd1)) begin
            p_tmp_20_reg_664 <= p_tmp_19_reg_574;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((tmp_3_2_fu_1000_p2 == 1'd0)) begin
            p_tmp_21_reg_269 <= p_tmp_15_reg_192;
        end else if ((tmp_3_2_fu_1000_p2 == 1'd1)) begin
            p_tmp_21_reg_269 <= p_b_read_assign_5_reg_230;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (tmp_3_3_fu_1024_p2 == 1'd0))) begin
        p_tmp_22_reg_409 <= p_b_read_assign_13_reg_344;
    end else if (((1'b1 == ap_CS_fsm_state14) & (tmp_3_3_reg_1265 == 1'd1))) begin
        p_tmp_22_reg_409 <= p_tmp_21_reg_269;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_3_3_1_fu_1042_p2 == 1'd0))) begin
        p_tmp_23_reg_523 <= p_b_read_assign_14_reg_383;
    end else if (((1'b1 == ap_CS_fsm_state17) & (tmp_3_3_1_reg_1277 == 1'd1))) begin
        p_tmp_23_reg_523 <= p_tmp_22_reg_409;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        if ((tmp_3_3_2_fu_1090_p2 == 1'd0)) begin
            p_tmp_24_reg_638 <= p_b_read_assign_15_reg_561;
        end else if ((tmp_3_3_2_fu_1090_p2 == 1'd1)) begin
            p_tmp_24_reg_638 <= p_tmp_23_reg_523;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        if ((tmp_3_3_3_fu_1102_p2 == 1'd0)) begin
            p_tmp_25_reg_703 <= p_b_read_assign_16_reg_612;
        end else if ((tmp_3_3_3_fu_1102_p2 == 1'd1)) begin
            p_tmp_25_reg_703 <= p_tmp_24_reg_638;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (tmp_3_3_fu_1024_p2 == 1'd0))) begin
        p_tmp_26_reg_396 <= p_tmp_21_reg_269;
    end else if (((1'b1 == ap_CS_fsm_state14) & (tmp_3_3_reg_1265 == 1'd1))) begin
        p_tmp_26_reg_396 <= p_b_read_assign_13_reg_344;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_4_reg_1302 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        p_tmp_27_reg_742 <= p_b_read_assign_18_reg_510;
    end else if (((tmp_3_4_reg_1302 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        p_tmp_27_reg_742 <= p_tmp_26_reg_396;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_4_1_fu_1120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        p_tmp_28_reg_768 <= p_b_read_assign_19_reg_625;
    end else if (((tmp_3_4_1_reg_1334 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        p_tmp_28_reg_768 <= p_tmp_27_reg_742;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        if ((tmp_3_4_2_fu_1126_p2 == 1'd0)) begin
            p_tmp_29_reg_794 <= p_b_read_assign_20_reg_690;
        end else if ((tmp_3_4_2_fu_1126_p2 == 1'd1)) begin
            p_tmp_29_reg_794 <= p_tmp_28_reg_768;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_3_0_1_fu_964_p2 == 1'd0))) begin
        p_tmp_2_reg_156 <= inputArray_q1;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_3_0_1_reg_1196 == 1'd1))) begin
        p_tmp_2_reg_156 <= p_tmp_1_reg_133;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_4_reg_1302 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        p_tmp_30_reg_729 <= p_tmp_26_reg_396;
    end else if (((tmp_3_4_reg_1302 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        p_tmp_30_reg_729 <= p_b_read_assign_18_reg_510;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_5_fu_1138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        p_tmp_31_reg_833 <= p_b_read_assign_22_reg_755;
    end else if (((tmp_3_5_reg_1346 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        p_tmp_31_reg_833 <= p_tmp_30_reg_729;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_5_1_fu_1144_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        p_tmp_32_reg_859 <= p_b_read_assign_23_reg_781;
    end else if (((tmp_3_5_1_reg_1350 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        p_tmp_32_reg_859 <= p_tmp_31_reg_833;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_5_fu_1138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        p_tmp_33_reg_820 <= p_tmp_30_reg_729;
    end else if (((tmp_3_5_reg_1346 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        p_tmp_33_reg_820 <= p_b_read_assign_22_reg_755;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_6_fu_1156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        p_tmp_34_reg_898 <= ap_phi_mux_p_b_read_assign_25_phi_fu_850_p4;
    end else if (((tmp_3_6_reg_1358 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        p_tmp_34_reg_898 <= p_tmp_33_reg_820;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_6_fu_1156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        p_tmp_35_reg_885 <= p_tmp_33_reg_820;
    end else if (((tmp_3_6_reg_1358 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        p_tmp_35_reg_885 <= p_b_read_assign_25_reg_846;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((tmp_3_0_2_fu_976_p2 == 1'd0)) begin
            p_tmp_3_reg_180 <= reg_923;
        end else if ((tmp_3_0_2_fu_976_p2 == 1'd1)) begin
            p_tmp_3_reg_180 <= p_tmp_2_reg_156;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_3_0_3_fu_982_p2 == 1'd0))) begin
        p_tmp_4_reg_295 <= inputArray_q1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (tmp_3_0_3_reg_1220 == 1'd1))) begin
        p_tmp_4_reg_295 <= p_tmp_3_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (tmp_3_0_4_fu_1012_p2 == 1'd0))) begin
        p_tmp_5_reg_332 <= reg_923;
    end else if (((1'b1 == ap_CS_fsm_state11) & (tmp_3_0_4_reg_1245 == 1'd1))) begin
        p_tmp_5_reg_332 <= p_tmp_4_reg_295;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (tmp_3_0_5_fu_1018_p2 == 1'd0))) begin
        p_tmp_6_reg_447 <= reg_947;
    end else if (((1'b1 == ap_CS_fsm_state16) & (tmp_3_0_5_reg_1255 == 1'd1))) begin
        p_tmp_6_reg_447 <= p_tmp_5_reg_332;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        if ((tmp_3_0_6_fu_1048_p2 == 1'd0)) begin
            p_tmp_7_reg_536 <= reg_923;
        end else if ((tmp_3_0_6_fu_1048_p2 == 1'd1)) begin
            p_tmp_7_reg_536 <= p_tmp_6_reg_447;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((tmp_3_fu_958_p2 == 1'd0)) begin
            p_tmp_8_reg_122 <= inputArray_q0;
        end else if ((tmp_3_fu_958_p2 == 1'd1)) begin
            p_tmp_8_reg_122 <= inputArray_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_3_1_fu_970_p2 == 1'd0))) begin
        p_tmp_9_reg_205 <= ap_phi_mux_p_b_read_assign_8_phi_fu_148_p4;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_3_1_reg_1206 == 1'd1))) begin
        p_tmp_9_reg_205 <= p_tmp_8_reg_122;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_923 <= inputArray_q1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_923 <= inputArray_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        reg_938 <= inputArray_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        reg_938 <= inputArray_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_947 <= inputArray_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_3_0_1_reg_1196 <= tmp_3_0_1_fu_964_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_3_0_2_reg_1210 <= tmp_3_0_2_fu_976_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_3_0_3_reg_1220 <= tmp_3_0_3_fu_982_p2;
        tmp_3_1_1_reg_1229 <= tmp_3_1_1_fu_988_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_3_0_4_reg_1245 <= tmp_3_0_4_fu_1012_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_3_0_5_reg_1255 <= tmp_3_0_5_fu_1018_p2;
        tmp_3_3_reg_1265 <= tmp_3_3_fu_1024_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_3_0_6_reg_1281 <= tmp_3_0_6_fu_1048_p2;
        tmp_3_1_4_reg_1285 <= tmp_3_1_4_fu_1054_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_3_0_7_reg_1306 <= tmp_3_0_7_fu_1078_p2;
        tmp_3_2_4_reg_1310 <= tmp_3_2_4_fu_1084_p2;
        tmp_3_3_2_reg_1314 <= tmp_3_3_2_fu_1090_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_3_1_2_reg_1233 <= tmp_3_1_2_fu_994_p2;
        tmp_3_2_reg_1237 <= tmp_3_2_fu_1000_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_3_1_3_reg_1269 <= tmp_3_1_3_fu_1030_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_3_1_5_reg_1294 <= tmp_3_1_5_fu_1060_p2;
        tmp_3_2_3_reg_1298 <= tmp_3_2_3_fu_1066_p2;
        tmp_3_4_reg_1302 <= tmp_3_4_fu_1072_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_3_1_6_reg_1318 <= tmp_3_1_6_fu_1096_p2;
        tmp_3_3_3_reg_1322 <= tmp_3_3_3_fu_1102_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_3_1_reg_1206 <= tmp_3_1_fu_970_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_3_2_1_reg_1241 <= tmp_3_2_1_fu_1006_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_3_2_2_reg_1273 <= tmp_3_2_2_fu_1036_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_3_2_5_reg_1326 <= tmp_3_2_5_fu_1108_p2;
        tmp_3_3_4_reg_1330 <= tmp_3_3_4_fu_1114_p2;
        tmp_3_4_1_reg_1334 <= tmp_3_4_1_fu_1120_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_3_3_1_reg_1277 <= tmp_3_3_1_fu_1042_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_3_4_2_reg_1338 <= tmp_3_4_2_fu_1126_p2;
        tmp_3_4_3_reg_1342 <= tmp_3_4_3_fu_1132_p2;
        tmp_3_5_reg_1346 <= tmp_3_5_fu_1138_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        tmp_3_5_1_reg_1350 <= tmp_3_5_1_fu_1144_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        tmp_3_5_2_reg_1354 <= tmp_3_5_2_fu_1150_p2;
        tmp_3_6_reg_1358 <= tmp_3_6_fu_1156_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_3_6_1_reg_1362 <= tmp_3_6_1_fu_1162_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_3_7_reg_1366 <= tmp_3_7_fu_1168_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_3_reg_1186 <= tmp_3_fu_958_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        if ((tmp_3_2_5_fu_1108_p2 == 1'd0)) begin
            ap_phi_mux_p_b_read_assign_17_phi_fu_681_p4 = p_tmp_20_reg_664;
        end else if ((tmp_3_2_5_fu_1108_p2 == 1'd1)) begin
            ap_phi_mux_p_b_read_assign_17_phi_fu_681_p4 = p_b_read_assign_12_reg_651;
        end else begin
            ap_phi_mux_p_b_read_assign_17_phi_fu_681_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_p_b_read_assign_17_phi_fu_681_p4 = 'bx;
    end
end

always @ (*) begin
    if (((tmp_3_5_1_reg_1350 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ap_phi_mux_p_b_read_assign_25_phi_fu_850_p4 = p_b_read_assign_23_reg_781;
    end else begin
        ap_phi_mux_p_b_read_assign_25_phi_fu_850_p4 = p_b_read_assign_25_reg_846;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_3_0_1_reg_1196 == 1'd1))) begin
        ap_phi_mux_p_b_read_assign_8_phi_fu_148_p4 = reg_947;
    end else begin
        ap_phi_mux_p_b_read_assign_8_phi_fu_148_p4 = p_b_read_assign_8_reg_144;
    end
end

always @ (*) begin
    if (((tmp_3_4_reg_1302 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        ap_phi_mux_p_tmp_27_phi_fu_746_p4 = p_b_read_assign_18_reg_510;
    end else begin
        ap_phi_mux_p_tmp_27_phi_fu_746_p4 = p_tmp_27_reg_742;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        if ((tmp_3_4_2_fu_1126_p2 == 1'd0)) begin
            ap_phi_mux_p_tmp_29_phi_fu_798_p4 = p_b_read_assign_20_reg_690;
        end else if ((tmp_3_4_2_fu_1126_p2 == 1'd1)) begin
            ap_phi_mux_p_tmp_29_phi_fu_798_p4 = p_tmp_28_reg_768;
        end else begin
            ap_phi_mux_p_tmp_29_phi_fu_798_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_p_tmp_29_phi_fu_798_p4 = 'bx;
    end
end

always @ (*) begin
    if (((tmp_3_5_1_reg_1350 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ap_phi_mux_p_tmp_32_phi_fu_863_p4 = p_tmp_31_reg_833;
    end else begin
        ap_phi_mux_p_tmp_32_phi_fu_863_p4 = p_tmp_32_reg_859;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        inputArray_address0 = inputArray_addr_8_reg_1289;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29))) begin
        inputArray_address0 = inputArray_addr_7_reg_1259;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state25))) begin
        inputArray_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        inputArray_address0 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state19))) begin
        inputArray_address0 = inputArray_addr_5_reg_1224;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        inputArray_address0 = inputArray_addr_reg_1174;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        inputArray_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state10))) begin
        inputArray_address0 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state11))) begin
        inputArray_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        inputArray_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        inputArray_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        inputArray_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        inputArray_address0 = 64'd0;
    end else begin
        inputArray_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        inputArray_address1 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29))) begin
        inputArray_address1 = inputArray_addr_6_reg_1249;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state20))) begin
        inputArray_address1 = inputArray_addr_3_reg_1200;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state19))) begin
        inputArray_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        inputArray_address1 = inputArray_addr_4_reg_1214;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        inputArray_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11))) begin
        inputArray_address1 = inputArray_addr_2_reg_1190;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        inputArray_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        inputArray_address1 = inputArray_addr_1_reg_1180;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        inputArray_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        inputArray_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        inputArray_address1 = 64'd1;
    end else begin
        inputArray_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state19) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        inputArray_ce0 = 1'b1;
    end else begin
        inputArray_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state19) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        inputArray_ce1 = 1'b1;
    end else begin
        inputArray_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        inputArray_d0 = p_tmp_35_reg_885;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        inputArray_d0 = p_tmp_32_reg_859;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        inputArray_d0 = p_tmp_25_reg_703;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        inputArray_d0 = p_tmp_20_reg_664;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        inputArray_d0 = p_tmp_7_reg_536;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        inputArray_d0 = p_b_read_assign_24_reg_807;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        inputArray_d0 = p_b_read_assign_17_reg_677;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        inputArray_d0 = p_b_read_assign_12_reg_651;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        inputArray_d0 = p_tmp_31_reg_833;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        inputArray_d0 = p_tmp_24_reg_638;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        inputArray_d0 = p_tmp_19_reg_574;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        inputArray_d0 = p_tmp_6_reg_447;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        inputArray_d0 = p_b_read_assign_20_reg_690;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        inputArray_d0 = p_b_read_assign_11_reg_548;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        inputArray_d0 = p_b_read_assign_3_reg_472;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        inputArray_d0 = p_tmp_23_reg_523;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        inputArray_d0 = p_tmp_12_reg_422;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        inputArray_d0 = p_tmp_5_reg_332;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        inputArray_d0 = p_b_read_assign_15_reg_561;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        inputArray_d0 = p_b_read_assign_2_reg_435;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        inputArray_d0 = p_tmp_17_reg_357;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        inputArray_d0 = p_tmp_4_reg_295;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        inputArray_d0 = p_b_read_assign_8_reg_144;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        inputArray_d0 = p_b_read_assign_1_reg_320;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state33))) begin
        inputArray_d0 = reg_938;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        inputArray_d0 = p_tmp_10_reg_243;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        inputArray_d0 = p_tmp_3_reg_180;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        inputArray_d0 = p_b_read_assign_s_reg_218;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state19))) begin
        inputArray_d0 = reg_947;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        inputArray_d0 = p_tmp_2_reg_156;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state5))) begin
        inputArray_d0 = reg_923;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        inputArray_d0 = p_tmp_1_reg_133;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        inputArray_d0 = inputArray_q1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        inputArray_d0 = inputArray_q0;
    end else begin
        inputArray_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        inputArray_d1 = p_tmp_34_reg_898;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        inputArray_d1 = p_tmp_29_reg_794;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        inputArray_d1 = p_b_read_assign_27_reg_911;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        inputArray_d1 = p_tmp_14_reg_599;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        inputArray_d1 = p_b_read_assign_26_reg_872;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        inputArray_d1 = p_b_read_assign_21_reg_716;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        inputArray_d1 = p_b_read_assign_25_reg_846;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        inputArray_d1 = p_b_read_assign_4_reg_587;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        inputArray_d1 = p_tmp_33_reg_820;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        inputArray_d1 = p_tmp_28_reg_768;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        inputArray_d1 = p_b_read_assign_22_reg_755;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        inputArray_d1 = p_tmp_13_reg_497;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        inputArray_d1 = p_b_read_assign_23_reg_781;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        inputArray_d1 = p_b_read_assign_16_reg_612;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        inputArray_d1 = p_b_read_assign_18_reg_510;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        inputArray_d1 = p_tmp_30_reg_729;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        inputArray_d1 = p_tmp_27_reg_742;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        inputArray_d1 = p_tmp_18_reg_459;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        inputArray_d1 = p_b_read_assign_13_reg_344;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        inputArray_d1 = p_b_read_assign_19_reg_625;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        inputArray_d1 = p_b_read_assign_10_reg_484;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        inputArray_d1 = p_b_read_assign_5_reg_230;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        inputArray_d1 = p_tmp_26_reg_396;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        inputArray_d1 = p_tmp_22_reg_409;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        inputArray_d1 = p_tmp_11_reg_307;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        inputArray_d1 = p_b_read_assign_14_reg_383;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        inputArray_d1 = p_b_read_assign_7_reg_370;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        inputArray_d1 = reg_923;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        inputArray_d1 = p_tmp_21_reg_269;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        inputArray_d1 = p_tmp_16_reg_282;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        inputArray_d1 = p_b_read_assign_6_reg_256;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        inputArray_d1 = p_tmp_15_reg_192;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        inputArray_d1 = p_tmp_9_reg_205;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        inputArray_d1 = p_b_read_assign_9_reg_168;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        inputArray_d1 = p_tmp_8_reg_122;
    end else begin
        inputArray_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state13) & (tmp_3_reg_1186 == 1'd1)) | ((tmp_3_7_reg_1366 == 1'd1) & (1'b1 == ap_CS_fsm_state41)) | ((1'b1 == ap_CS_fsm_state7) & (tmp_3_0_2_reg_1210 == 1'd1)) | ((tmp_3_5_2_reg_1354 == 1'd1) & (1'b1 == ap_CS_fsm_state40)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_3_0_1_reg_1196 == 1'd1)) | ((tmp_3_3_4_reg_1330 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((tmp_3_2_5_reg_1326 == 1'd1) & (1'b1 == ap_CS_fsm_state34)) | ((tmp_3_0_7_reg_1306 == 1'd1) & (1'b1 == ap_CS_fsm_state33)) | ((1'b1 == ap_CS_fsm_state2) & (tmp_3_fu_958_p2 == 1'd1)) | ((tmp_3_3_3_reg_1322 == 1'd1) & (1'b1 == ap_CS_fsm_state31)) | ((tmp_3_2_4_reg_1310 == 1'd1) & (1'b1 == ap_CS_fsm_state30)) | ((tmp_3_1_5_reg_1294 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((tmp_3_0_6_reg_1281 == 1'd1) & (1'b1 == ap_CS_fsm_state29)) | ((tmp_3_1_4_reg_1285 == 1'd1) & (1'b1 == ap_CS_fsm_state23)) | ((tmp_3_0_7_reg_1306 == 1'd1) & (1'b1 == ap_CS_fsm_state37)) | ((tmp_3_3_4_reg_1330 == 1'd1) & (1'b1 == ap_CS_fsm_state35)) | ((tmp_3_2_4_reg_1310 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((tmp_3_3_2_reg_1314 == 1'd1) & (1'b1 == ap_CS_fsm_state24)) | ((1'b1 == ap_CS_fsm_state22) & (tmp_3_0_5_reg_1255 == 1'd1)) | ((1'b1 == ap_CS_fsm_state16) & (tmp_3_0_4_reg_1245 == 1'd1)) | ((tmp_3_2_5_reg_1326 == 1'd1) & (1'b1 == ap_CS_fsm_state38)) | ((tmp_3_5_2_reg_1354 == 1'd1) & (1'b1 == ap_CS_fsm_state36)) | ((tmp_3_5_1_reg_1350 == 1'd1) & (1'b1 == ap_CS_fsm_state32)) | ((tmp_3_4_2_reg_1338 == 1'd1) & (1'b1 == ap_CS_fsm_state28)) | ((tmp_3_0_6_reg_1281 == 1'd1) & (1'b1 == ap_CS_fsm_state25)) | ((tmp_3_3_2_reg_1314 == 1'd1) & (1'b1 == ap_CS_fsm_state21)) | ((tmp_3_1_4_reg_1285 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((1'b1 == ap_CS_fsm_state17) & (tmp_3_2_2_reg_1273 == 1'd1)) | ((1'b1 == ap_CS_fsm_state15) & (tmp_3_1_reg_1206 == 1'd1)) | ((1'b1 == ap_CS_fsm_state14) & (tmp_3_1_3_reg_1269 == 1'd1)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_3_0_3_reg_1220 == 1'd1)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_3_1_2_reg_1233 == 1'd1)) | ((1'b1 == ap_CS_fsm_state8) & (tmp_3_0_3_reg_1220 == 1'd1)) | ((1'b1 == ap_CS_fsm_state5) & (tmp_3_0_2_fu_976_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state11) & (tmp_3_1_2_reg_1233 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_3_0_1_fu_964_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state19) & (tmp_3_0_5_reg_1255 == 1'd1)))) begin
        inputArray_we0 = 1'b1;
    end else begin
        inputArray_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state13) & (tmp_3_0_4_reg_1245 == 1'd1)) | ((1'b1 == ap_CS_fsm_state7) & (tmp_3_1_1_reg_1229 == 1'd1)) | ((tmp_3_4_3_reg_1342 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_3_1_fu_970_p2 == 1'd1)) | ((tmp_3_1_6_reg_1318 == 1'd1) & (1'b1 == ap_CS_fsm_state33)) | ((tmp_3_4_2_reg_1338 == 1'd1) & (1'b1 == ap_CS_fsm_state31)) | ((tmp_3_1_5_reg_1294 == 1'd1) & (1'b1 == ap_CS_fsm_state29)) | ((tmp_3_2_3_reg_1298 == 1'd1) & (1'b1 == ap_CS_fsm_state23)) | ((tmp_3_6_1_reg_1362 == 1'd1) & (1'b1 == ap_CS_fsm_state40)) | ((tmp_3_1_6_reg_1318 == 1'd1) & (1'b1 == ap_CS_fsm_state37)) | ((tmp_3_6_reg_1358 == 1'd1) & (1'b1 == ap_CS_fsm_state34)) | ((tmp_3_4_3_reg_1342 == 1'd1) & (1'b1 == ap_CS_fsm_state35)) | ((tmp_3_5_reg_1346 == 1'd1) & (1'b1 == ap_CS_fsm_state30)) | ((tmp_3_3_3_reg_1322 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((tmp_3_4_1_reg_1334 == 1'd1) & (1'b1 == ap_CS_fsm_state24)) | ((tmp_3_4_reg_1302 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((1'b1 == ap_CS_fsm_state16) & (tmp_3_1_3_reg_1269 == 1'd1)) | ((1'b1 == ap_CS_fsm_state22) & (tmp_3_3_reg_1265 == 1'd1)) | ((tmp_3_7_fu_1168_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38)) | ((tmp_3_6_1_fu_1162_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36)) | ((tmp_3_6_fu_1156_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32)) | ((tmp_3_5_1_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28)) | ((tmp_3_5_fu_1138_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25)) | ((tmp_3_4_1_fu_1120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21)) | ((tmp_3_2_3_reg_1298 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((tmp_3_4_fu_1072_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == ap_CS_fsm_state17) & (tmp_3_3_1_reg_1277 == 1'd1)) | ((1'b1 == ap_CS_fsm_state15) & (tmp_3_3_1_fu_1042_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state14) & (tmp_3_2_2_fu_1036_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state12) & (tmp_3_3_fu_1024_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_3_2_1_fu_1006_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state8) & (tmp_3_2_fu_1000_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state11) & (tmp_3_2_1_reg_1241 == 1'd1)) | ((1'b1 == ap_CS_fsm_state6) & (tmp_3_1_1_fu_988_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state19) & (tmp_3_2_reg_1237 == 1'd1)))) begin
        inputArray_we1 = 1'b1;
    end else begin
        inputArray_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign inputArray_addr_1_reg_1180 = 64'd1;

assign inputArray_addr_2_reg_1190 = 64'd2;

assign inputArray_addr_3_reg_1200 = 64'd3;

assign inputArray_addr_4_reg_1214 = 64'd4;

assign inputArray_addr_5_reg_1224 = 64'd5;

assign inputArray_addr_6_reg_1249 = 64'd6;

assign inputArray_addr_7_reg_1259 = 64'd7;

assign inputArray_addr_8_reg_1289 = 64'd8;

assign inputArray_addr_reg_1174 = 64'd0;

assign tmp_3_0_1_fu_964_p2 = (($signed(p_tmp_1_reg_133) > $signed(inputArray_q1)) ? 1'b1 : 1'b0);

assign tmp_3_0_2_fu_976_p2 = (($signed(p_tmp_2_reg_156) > $signed(reg_923)) ? 1'b1 : 1'b0);

assign tmp_3_0_3_fu_982_p2 = (($signed(p_tmp_3_reg_180) > $signed(inputArray_q1)) ? 1'b1 : 1'b0);

assign tmp_3_0_4_fu_1012_p2 = (($signed(p_tmp_4_reg_295) > $signed(reg_923)) ? 1'b1 : 1'b0);

assign tmp_3_0_5_fu_1018_p2 = (($signed(p_tmp_5_reg_332) > $signed(reg_947)) ? 1'b1 : 1'b0);

assign tmp_3_0_6_fu_1048_p2 = (($signed(p_tmp_6_reg_447) > $signed(reg_923)) ? 1'b1 : 1'b0);

assign tmp_3_0_7_fu_1078_p2 = (($signed(p_tmp_7_reg_536) > $signed(inputArray_q0)) ? 1'b1 : 1'b0);

assign tmp_3_1_1_fu_988_p2 = (($signed(p_tmp_9_reg_205) > $signed(p_b_read_assign_9_reg_168)) ? 1'b1 : 1'b0);

assign tmp_3_1_2_fu_994_p2 = (($signed(p_tmp_10_reg_243) > $signed(p_b_read_assign_s_reg_218)) ? 1'b1 : 1'b0);

assign tmp_3_1_3_fu_1030_p2 = (($signed(p_tmp_11_reg_307) > $signed(p_b_read_assign_1_reg_320)) ? 1'b1 : 1'b0);

assign tmp_3_1_4_fu_1054_p2 = (($signed(p_tmp_12_reg_422) > $signed(p_b_read_assign_2_reg_435)) ? 1'b1 : 1'b0);

assign tmp_3_1_5_fu_1060_p2 = (($signed(p_tmp_13_reg_497) > $signed(p_b_read_assign_3_reg_472)) ? 1'b1 : 1'b0);

assign tmp_3_1_6_fu_1096_p2 = (($signed(p_tmp_14_reg_599) > $signed(p_b_read_assign_4_reg_587)) ? 1'b1 : 1'b0);

assign tmp_3_1_fu_970_p2 = (($signed(p_tmp_8_reg_122) > $signed(ap_phi_mux_p_b_read_assign_8_phi_fu_148_p4)) ? 1'b1 : 1'b0);

assign tmp_3_2_1_fu_1006_p2 = (($signed(p_tmp_16_reg_282) > $signed(p_b_read_assign_6_reg_256)) ? 1'b1 : 1'b0);

assign tmp_3_2_2_fu_1036_p2 = (($signed(p_tmp_17_reg_357) > $signed(p_b_read_assign_7_reg_370)) ? 1'b1 : 1'b0);

assign tmp_3_2_3_fu_1066_p2 = (($signed(p_tmp_18_reg_459) > $signed(p_b_read_assign_10_reg_484)) ? 1'b1 : 1'b0);

assign tmp_3_2_4_fu_1084_p2 = (($signed(p_tmp_19_reg_574) > $signed(p_b_read_assign_11_reg_548)) ? 1'b1 : 1'b0);

assign tmp_3_2_5_fu_1108_p2 = (($signed(p_tmp_20_reg_664) > $signed(p_b_read_assign_12_reg_651)) ? 1'b1 : 1'b0);

assign tmp_3_2_fu_1000_p2 = (($signed(p_tmp_15_reg_192) > $signed(p_b_read_assign_5_reg_230)) ? 1'b1 : 1'b0);

assign tmp_3_3_1_fu_1042_p2 = (($signed(p_tmp_22_reg_409) > $signed(p_b_read_assign_14_reg_383)) ? 1'b1 : 1'b0);

assign tmp_3_3_2_fu_1090_p2 = (($signed(p_tmp_23_reg_523) > $signed(p_b_read_assign_15_reg_561)) ? 1'b1 : 1'b0);

assign tmp_3_3_3_fu_1102_p2 = (($signed(p_tmp_24_reg_638) > $signed(p_b_read_assign_16_reg_612)) ? 1'b1 : 1'b0);

assign tmp_3_3_4_fu_1114_p2 = (($signed(p_tmp_25_reg_703) > $signed(ap_phi_mux_p_b_read_assign_17_phi_fu_681_p4)) ? 1'b1 : 1'b0);

assign tmp_3_3_fu_1024_p2 = (($signed(p_tmp_21_reg_269) > $signed(p_b_read_assign_13_reg_344)) ? 1'b1 : 1'b0);

assign tmp_3_4_1_fu_1120_p2 = (($signed(ap_phi_mux_p_tmp_27_phi_fu_746_p4) > $signed(p_b_read_assign_19_reg_625)) ? 1'b1 : 1'b0);

assign tmp_3_4_2_fu_1126_p2 = (($signed(p_tmp_28_reg_768) > $signed(p_b_read_assign_20_reg_690)) ? 1'b1 : 1'b0);

assign tmp_3_4_3_fu_1132_p2 = (($signed(ap_phi_mux_p_tmp_29_phi_fu_798_p4) > $signed(p_b_read_assign_21_reg_716)) ? 1'b1 : 1'b0);

assign tmp_3_4_fu_1072_p2 = (($signed(p_tmp_26_reg_396) > $signed(p_b_read_assign_18_reg_510)) ? 1'b1 : 1'b0);

assign tmp_3_5_1_fu_1144_p2 = (($signed(p_tmp_31_reg_833) > $signed(p_b_read_assign_23_reg_781)) ? 1'b1 : 1'b0);

assign tmp_3_5_2_fu_1150_p2 = (($signed(ap_phi_mux_p_tmp_32_phi_fu_863_p4) > $signed(p_b_read_assign_24_reg_807)) ? 1'b1 : 1'b0);

assign tmp_3_5_fu_1138_p2 = (($signed(p_tmp_30_reg_729) > $signed(p_b_read_assign_22_reg_755)) ? 1'b1 : 1'b0);

assign tmp_3_6_1_fu_1162_p2 = (($signed(p_tmp_34_reg_898) > $signed(p_b_read_assign_26_reg_872)) ? 1'b1 : 1'b0);

assign tmp_3_6_fu_1156_p2 = (($signed(p_tmp_33_reg_820) > $signed(ap_phi_mux_p_b_read_assign_25_phi_fu_850_p4)) ? 1'b1 : 1'b0);

assign tmp_3_7_fu_1168_p2 = (($signed(p_tmp_35_reg_885) > $signed(p_b_read_assign_27_reg_911)) ? 1'b1 : 1'b0);

assign tmp_3_fu_958_p2 = (($signed(inputArray_q0) > $signed(inputArray_q1)) ? 1'b1 : 1'b0);

endmodule //bubbleSort
