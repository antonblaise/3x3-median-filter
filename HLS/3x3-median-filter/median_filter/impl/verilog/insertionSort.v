// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module insertionSort (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inputArray_address0,
        inputArray_ce0,
        inputArray_we0,
        inputArray_d0,
        inputArray_q0,
        inputArray_address1,
        inputArray_ce1,
        inputArray_we1,
        inputArray_d1,
        inputArray_q1
);

parameter    ap_ST_fsm_state1 = 50'd1;
parameter    ap_ST_fsm_state2 = 50'd2;
parameter    ap_ST_fsm_state3 = 50'd4;
parameter    ap_ST_fsm_state4 = 50'd8;
parameter    ap_ST_fsm_state5 = 50'd16;
parameter    ap_ST_fsm_state6 = 50'd32;
parameter    ap_ST_fsm_state7 = 50'd64;
parameter    ap_ST_fsm_state8 = 50'd128;
parameter    ap_ST_fsm_state9 = 50'd256;
parameter    ap_ST_fsm_state10 = 50'd512;
parameter    ap_ST_fsm_state11 = 50'd1024;
parameter    ap_ST_fsm_state12 = 50'd2048;
parameter    ap_ST_fsm_state13 = 50'd4096;
parameter    ap_ST_fsm_state14 = 50'd8192;
parameter    ap_ST_fsm_state15 = 50'd16384;
parameter    ap_ST_fsm_state16 = 50'd32768;
parameter    ap_ST_fsm_state17 = 50'd65536;
parameter    ap_ST_fsm_state18 = 50'd131072;
parameter    ap_ST_fsm_state19 = 50'd262144;
parameter    ap_ST_fsm_state20 = 50'd524288;
parameter    ap_ST_fsm_state21 = 50'd1048576;
parameter    ap_ST_fsm_state22 = 50'd2097152;
parameter    ap_ST_fsm_state23 = 50'd4194304;
parameter    ap_ST_fsm_state24 = 50'd8388608;
parameter    ap_ST_fsm_state25 = 50'd16777216;
parameter    ap_ST_fsm_state26 = 50'd33554432;
parameter    ap_ST_fsm_state27 = 50'd67108864;
parameter    ap_ST_fsm_state28 = 50'd134217728;
parameter    ap_ST_fsm_state29 = 50'd268435456;
parameter    ap_ST_fsm_state30 = 50'd536870912;
parameter    ap_ST_fsm_state31 = 50'd1073741824;
parameter    ap_ST_fsm_state32 = 50'd2147483648;
parameter    ap_ST_fsm_state33 = 50'd4294967296;
parameter    ap_ST_fsm_state34 = 50'd8589934592;
parameter    ap_ST_fsm_state35 = 50'd17179869184;
parameter    ap_ST_fsm_state36 = 50'd34359738368;
parameter    ap_ST_fsm_state37 = 50'd68719476736;
parameter    ap_ST_fsm_state38 = 50'd137438953472;
parameter    ap_ST_fsm_state39 = 50'd274877906944;
parameter    ap_ST_fsm_state40 = 50'd549755813888;
parameter    ap_ST_fsm_state41 = 50'd1099511627776;
parameter    ap_ST_fsm_state42 = 50'd2199023255552;
parameter    ap_ST_fsm_state43 = 50'd4398046511104;
parameter    ap_ST_fsm_state44 = 50'd8796093022208;
parameter    ap_ST_fsm_state45 = 50'd17592186044416;
parameter    ap_ST_fsm_state46 = 50'd35184372088832;
parameter    ap_ST_fsm_state47 = 50'd70368744177664;
parameter    ap_ST_fsm_state48 = 50'd140737488355328;
parameter    ap_ST_fsm_state49 = 50'd281474976710656;
parameter    ap_ST_fsm_state50 = 50'd562949953421312;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] inputArray_address0;
output   inputArray_ce0;
output   inputArray_we0;
output  [31:0] inputArray_d0;
input  [31:0] inputArray_q0;
output  [3:0] inputArray_address1;
output   inputArray_ce1;
output   inputArray_we1;
output  [31:0] inputArray_d1;
input  [31:0] inputArray_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] inputArray_address0;
reg inputArray_ce0;
reg inputArray_we0;
reg[3:0] inputArray_address1;
reg inputArray_ce1;
reg inputArray_we1;

(* fsm_encoding = "none" *) reg   [49:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_631;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state44;
wire   [3:0] inputArray_addr_reg_1054;
wire   [3:0] inputArray_addr_1_reg_1060;
wire   [3:0] inputArray_addr_3_reg_1068;
wire    ap_CS_fsm_state4;
wire   [0:0] grp_fu_595_p2;
reg   [0:0] tmp_3_1_reg_1074;
wire   [3:0] inputArray_addr_5_reg_1081;
wire    ap_CS_fsm_state8;
reg   [0:0] tmp_3_2_reg_1087;
wire   [0:0] grp_fu_601_p2;
reg   [0:0] tmp_3_2_1_reg_1091;
wire    ap_CS_fsm_state10;
wire   [3:0] inputArray_addr_7_reg_1098;
wire    ap_CS_fsm_state13;
reg   [0:0] tmp_3_3_reg_1103;
wire   [0:0] grp_fu_606_p2;
reg   [0:0] tmp_3_3_1_reg_1107;
wire    ap_CS_fsm_state15;
reg   [0:0] tmp_3_3_2_reg_1111;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state19;
wire  signed [31:0] j_0_in_4_cast_fu_668_p1;
reg  signed [31:0] j_0_in_4_cast_reg_1123;
wire    ap_CS_fsm_state21;
wire  signed [3:0] j_4_fu_672_p2;
reg  signed [3:0] j_4_reg_1128;
reg   [3:0] inputArray_addr_10_reg_1138;
wire   [0:0] tmp_1_4_fu_682_p2;
wire   [2:0] tmp_4_fu_697_p1;
reg   [2:0] tmp_4_reg_1147;
wire    ap_CS_fsm_state22;
wire   [0:0] grp_fu_611_p2;
wire  signed [3:0] j_4_1_fu_701_p2;
reg  signed [3:0] j_4_1_reg_1152;
wire   [2:0] j_4_1_cast_fu_711_p2;
reg   [2:0] j_4_1_cast_reg_1158;
reg   [3:0] inputArray_addr_12_reg_1166;
wire   [0:0] tmp_1_4_1_fu_717_p2;
wire  signed [3:0] j_4_2_fu_727_p2;
reg  signed [3:0] j_4_2_reg_1175;
wire    ap_CS_fsm_state23;
reg   [3:0] inputArray_addr_13_reg_1184;
wire   [0:0] tmp_1_4_2_fu_737_p2;
wire  signed [3:0] j_4_3_fu_747_p2;
reg  signed [3:0] j_4_3_reg_1193;
wire    ap_CS_fsm_state24;
wire   [0:0] tmp_1_4_3_fu_757_p2;
wire    ap_CS_fsm_state27;
wire  signed [31:0] j_0_in_5_cast_fu_772_p1;
reg  signed [31:0] j_0_in_5_cast_reg_1214;
wire    ap_CS_fsm_state29;
wire  signed [3:0] j_5_fu_776_p2;
reg  signed [3:0] j_5_reg_1219;
reg   [3:0] inputArray_addr_17_reg_1229;
wire   [0:0] tmp_1_5_fu_786_p2;
wire  signed [3:0] j_5_1_fu_801_p2;
reg  signed [3:0] j_5_1_reg_1238;
wire    ap_CS_fsm_state30;
wire   [0:0] grp_fu_616_p2;
reg   [3:0] inputArray_addr_19_reg_1248;
wire   [0:0] tmp_1_5_1_fu_811_p2;
wire   [2:0] tmp_5_fu_821_p1;
reg   [2:0] tmp_5_reg_1257;
wire    ap_CS_fsm_state31;
wire  signed [3:0] j_5_2_fu_825_p2;
reg  signed [3:0] j_5_2_reg_1262;
reg   [3:0] inputArray_addr_20_reg_1271;
wire   [0:0] tmp_1_5_2_fu_835_p2;
wire  signed [3:0] j_5_3_fu_845_p2;
reg  signed [3:0] j_5_3_reg_1280;
wire    ap_CS_fsm_state32;
wire   [0:0] tmp_1_5_3_fu_855_p2;
wire    ap_CS_fsm_state35;
wire  signed [31:0] j_0_in_6_cast_fu_870_p1;
reg  signed [31:0] j_0_in_6_cast_reg_1301;
wire    ap_CS_fsm_state37;
wire  signed [3:0] j_6_fu_874_p2;
reg  signed [3:0] j_6_reg_1306;
reg   [3:0] inputArray_addr_24_reg_1316;
wire   [0:0] tmp_1_6_fu_884_p2;
wire  signed [3:0] j_6_1_fu_899_p2;
reg  signed [3:0] j_6_1_reg_1325;
wire    ap_CS_fsm_state38;
wire   [0:0] grp_fu_621_p2;
reg   [3:0] inputArray_addr_26_reg_1335;
wire   [0:0] tmp_1_6_1_fu_909_p2;
wire  signed [3:0] j_6_2_fu_919_p2;
reg  signed [3:0] j_6_2_reg_1344;
wire    ap_CS_fsm_state39;
reg   [3:0] inputArray_addr_27_reg_1354;
wire   [0:0] tmp_1_6_2_fu_929_p2;
wire  signed [3:0] j_6_3_fu_939_p2;
reg  signed [3:0] j_6_3_reg_1363;
wire    ap_CS_fsm_state40;
wire   [0:0] tmp_1_6_3_fu_949_p2;
wire    ap_CS_fsm_state43;
wire   [4:0] j_0_in_7_cast_fu_964_p1;
reg   [4:0] j_0_in_7_cast_reg_1384;
wire    ap_CS_fsm_state45;
wire  signed [4:0] j_7_cast3_fu_974_p1;
reg  signed [4:0] j_7_cast3_reg_1390;
reg   [3:0] inputArray_addr_31_reg_1398;
wire   [0:0] tmp_1_7_fu_982_p2;
wire  signed [3:0] j_7_1_fu_998_p2;
reg  signed [3:0] j_7_1_reg_1407;
wire    ap_CS_fsm_state46;
wire   [0:0] grp_fu_626_p2;
reg   [3:0] inputArray_addr_33_reg_1412;
wire  signed [4:0] j_7_1_cast2_fu_1013_p1;
reg  signed [4:0] j_7_1_cast2_reg_1418;
wire    ap_CS_fsm_state47;
wire  signed [3:0] j_7_2_fu_1016_p2;
reg  signed [3:0] j_7_2_reg_1426;
reg   [3:0] inputArray_addr_34_reg_1431;
wire  signed [4:0] j_7_2_cast1_fu_1031_p1;
reg  signed [4:0] j_7_2_cast1_reg_1437;
wire    ap_CS_fsm_state48;
wire  signed [3:0] j_7_3_fu_1034_p2;
reg  signed [3:0] j_7_3_reg_1445;
reg   [0:0] j_0_in_lcssa_reg_387;
reg   [1:0] j_0_in_lcssa_1_reg_400;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_3_1_1_fu_647_p2;
reg   [1:0] j_0_in_lcssa_2_reg_417;
wire    ap_CS_fsm_state11;
reg   [2:0] j_0_in_lcssa_3_reg_438;
wire    ap_CS_fsm_state17;
wire  signed [3:0] ap_phi_mux_j_0_in_4_phi_fu_467_p4;
reg  signed [3:0] j_0_in_4_reg_463;
wire    ap_CS_fsm_state25;
reg   [3:0] j_0_in_lcssa_4_reg_475;
wire  signed [3:0] ap_phi_mux_j_0_in_5_phi_fu_502_p4;
reg  signed [3:0] j_0_in_5_reg_498;
wire    ap_CS_fsm_state33;
reg   [3:0] j_0_in_lcssa_5_reg_510;
wire  signed [3:0] ap_phi_mux_j_0_in_6_phi_fu_537_p4;
reg  signed [3:0] j_0_in_6_reg_533;
wire    ap_CS_fsm_state41;
reg   [3:0] j_0_in_lcssa_6_reg_545;
reg   [3:0] j_0_in_7_reg_568;
wire    ap_CS_fsm_state49;
reg   [4:0] j_0_in_lcssa_7_reg_580;
wire   [63:0] tmp_4_s_fu_642_p1;
wire    ap_CS_fsm_state3;
wire   [63:0] tmp_4_1_fu_653_p1;
wire    ap_CS_fsm_state7;
wire   [63:0] tmp_4_2_fu_658_p1;
wire    ap_CS_fsm_state12;
wire   [63:0] tmp_4_3_fu_663_p1;
wire    ap_CS_fsm_state18;
wire   [63:0] tmp_2_4_fu_688_p1;
wire   [63:0] tmp_6_4_fu_693_p1;
wire   [63:0] tmp_2_4_1_fu_722_p1;
wire   [63:0] tmp_2_4_2_fu_742_p1;
wire   [63:0] tmp_2_4_3_fu_762_p1;
wire  signed [63:0] tmp_4_4_fu_767_p1;
wire    ap_CS_fsm_state26;
wire   [63:0] tmp_2_5_fu_792_p1;
wire   [63:0] tmp_6_5_fu_797_p1;
wire   [63:0] tmp_2_5_1_fu_816_p1;
wire   [63:0] tmp_2_5_2_fu_840_p1;
wire   [63:0] tmp_2_5_3_fu_860_p1;
wire  signed [63:0] tmp_4_5_fu_865_p1;
wire    ap_CS_fsm_state34;
wire   [63:0] tmp_2_6_fu_890_p1;
wire   [63:0] tmp_6_6_fu_895_p1;
wire   [63:0] tmp_2_6_1_fu_914_p1;
wire   [63:0] tmp_2_6_2_fu_934_p1;
wire   [63:0] tmp_2_6_3_fu_954_p1;
wire  signed [63:0] tmp_4_6_fu_959_p1;
wire    ap_CS_fsm_state42;
wire   [63:0] tmp_2_7_fu_988_p1;
wire   [63:0] tmp_6_7_fu_993_p1;
wire   [63:0] tmp_2_7_1_fu_1008_p1;
wire   [63:0] tmp_2_7_2_fu_1026_p1;
wire   [63:0] tmp_2_7_3_fu_1044_p1;
wire  signed [63:0] tmp_4_7_fu_1049_p1;
wire    ap_CS_fsm_state50;
wire  signed [31:0] j_4_cast_fu_678_p1;
wire  signed [31:0] j_4_1_cast7_fu_707_p1;
wire  signed [31:0] j_4_2_cast6_fu_733_p1;
wire  signed [31:0] j_4_3_cast_fu_753_p1;
wire  signed [31:0] j_5_cast_fu_782_p1;
wire  signed [31:0] j_5_1_cast_fu_807_p1;
wire  signed [31:0] j_5_2_cast5_fu_831_p1;
wire  signed [31:0] j_5_3_cast_fu_851_p1;
wire  signed [31:0] j_6_cast_fu_880_p1;
wire  signed [31:0] j_6_1_cast_fu_905_p1;
wire  signed [31:0] j_6_2_cast_fu_925_p1;
wire  signed [31:0] j_6_3_cast_fu_945_p1;
wire  signed [3:0] j_7_fu_968_p2;
wire  signed [31:0] j_7_cast_fu_978_p1;
wire  signed [31:0] j_7_1_cast_fu_1004_p1;
wire  signed [31:0] j_7_2_cast_fu_1022_p1;
wire  signed [31:0] j_7_3_cast_fu_1040_p1;
reg   [49:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 50'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        j_0_in_4_reg_463 <= j_4_3_reg_1193;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        j_0_in_4_reg_463 <= 4'd5;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        j_0_in_5_reg_498 <= j_5_3_reg_1280;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        j_0_in_5_reg_498 <= 4'd6;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        j_0_in_6_reg_533 <= j_6_3_reg_1363;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        j_0_in_6_reg_533 <= 4'd7;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_626_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        j_0_in_7_reg_568 <= j_7_3_reg_1445;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        j_0_in_7_reg_568 <= 4'd8;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_1_1_fu_647_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6) & (tmp_3_1_reg_1074 == 1'd1))) begin
        j_0_in_lcssa_1_reg_400 <= 2'd0;
    end else if (((tmp_3_1_1_fu_647_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (tmp_3_1_reg_1074 == 1'd1))) begin
        j_0_in_lcssa_1_reg_400 <= 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state5) & (grp_fu_595_p2 == 1'd0))) begin
        j_0_in_lcssa_1_reg_400 <= 2'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_3_2_1_reg_1091 == 1'd1) & (grp_fu_601_p2 == 1'd1) & (tmp_3_2_reg_1087 == 1'd1))) begin
        j_0_in_lcssa_2_reg_417 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (tmp_3_2_1_reg_1091 == 1'd1) & (grp_fu_601_p2 == 1'd0) & (tmp_3_2_reg_1087 == 1'd1))) begin
        j_0_in_lcssa_2_reg_417 <= 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state10) & (grp_fu_601_p2 == 1'd0))) begin
        j_0_in_lcssa_2_reg_417 <= 2'd2;
    end else if (((1'b1 == ap_CS_fsm_state9) & (grp_fu_595_p2 == 1'd0))) begin
        j_0_in_lcssa_2_reg_417 <= 2'd3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_3_3_2_reg_1111 == 1'd1) & (tmp_3_3_1_reg_1107 == 1'd1) & (grp_fu_606_p2 == 1'd1) & (tmp_3_3_reg_1103 == 1'd1))) begin
        j_0_in_lcssa_3_reg_438 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state17) & (tmp_3_3_2_reg_1111 == 1'd1) & (tmp_3_3_1_reg_1107 == 1'd1) & (grp_fu_606_p2 == 1'd0) & (tmp_3_3_reg_1103 == 1'd1))) begin
        j_0_in_lcssa_3_reg_438 <= 3'd1;
    end else if (((1'b1 == ap_CS_fsm_state16) & (grp_fu_606_p2 == 1'd0))) begin
        j_0_in_lcssa_3_reg_438 <= 3'd2;
    end else if (((1'b1 == ap_CS_fsm_state15) & (grp_fu_606_p2 == 1'd0))) begin
        j_0_in_lcssa_3_reg_438 <= 3'd3;
    end else if (((1'b1 == ap_CS_fsm_state14) & (grp_fu_595_p2 == 1'd0))) begin
        j_0_in_lcssa_3_reg_438 <= 3'd4;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_fu_611_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25)) | ((tmp_1_4_3_fu_757_p2 == 1'd0) & (grp_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24)))) begin
        j_0_in_lcssa_4_reg_475 <= j_4_2_reg_1175;
    end else if ((((grp_fu_611_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24)) | ((tmp_1_4_2_fu_737_p2 == 1'd0) & (grp_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23)))) begin
        j_0_in_lcssa_4_reg_475 <= j_4_1_reg_1152;
    end else if ((((grp_fu_611_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23)) | ((tmp_1_4_1_fu_717_p2 == 1'd0) & (grp_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22)))) begin
        j_0_in_lcssa_4_reg_475 <= j_4_reg_1128;
    end else if (((tmp_1_4_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        j_0_in_lcssa_4_reg_475 <= ap_phi_mux_j_0_in_4_phi_fu_467_p4;
    end else if (((grp_fu_611_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        j_0_in_lcssa_4_reg_475 <= j_0_in_4_reg_463;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_fu_616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33)) | ((tmp_1_5_3_fu_855_p2 == 1'd0) & (grp_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32)))) begin
        j_0_in_lcssa_5_reg_510 <= j_5_2_reg_1262;
    end else if ((((grp_fu_616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32)) | ((tmp_1_5_2_fu_835_p2 == 1'd0) & (grp_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31)))) begin
        j_0_in_lcssa_5_reg_510 <= j_5_1_reg_1238;
    end else if ((((grp_fu_616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)) | ((tmp_1_5_1_fu_811_p2 == 1'd0) & (grp_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30)))) begin
        j_0_in_lcssa_5_reg_510 <= j_5_reg_1219;
    end else if (((tmp_1_5_fu_786_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        j_0_in_lcssa_5_reg_510 <= ap_phi_mux_j_0_in_5_phi_fu_502_p4;
    end else if (((grp_fu_616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        j_0_in_lcssa_5_reg_510 <= j_0_in_5_reg_498;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_fu_621_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state41)) | ((tmp_1_6_3_fu_949_p2 == 1'd0) & (grp_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40)))) begin
        j_0_in_lcssa_6_reg_545 <= j_6_2_reg_1344;
    end else if ((((grp_fu_621_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40)) | ((tmp_1_6_2_fu_929_p2 == 1'd0) & (grp_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39)))) begin
        j_0_in_lcssa_6_reg_545 <= j_6_1_reg_1325;
    end else if ((((grp_fu_621_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state39)) | ((tmp_1_6_1_fu_909_p2 == 1'd0) & (grp_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38)))) begin
        j_0_in_lcssa_6_reg_545 <= j_6_reg_1306;
    end else if (((tmp_1_6_fu_884_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        j_0_in_lcssa_6_reg_545 <= ap_phi_mux_j_0_in_6_phi_fu_537_p4;
    end else if (((grp_fu_621_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state38))) begin
        j_0_in_lcssa_6_reg_545 <= j_0_in_6_reg_533;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_626_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        j_0_in_lcssa_7_reg_580 <= j_7_2_cast1_reg_1437;
    end else if (((grp_fu_626_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        j_0_in_lcssa_7_reg_580 <= j_7_1_cast2_reg_1418;
    end else if (((grp_fu_626_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        j_0_in_lcssa_7_reg_580 <= j_7_cast3_reg_1390;
    end else if (((tmp_1_7_fu_982_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        j_0_in_lcssa_7_reg_580 <= j_0_in_7_cast_fu_964_p1;
    end else if (((grp_fu_626_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state46))) begin
        j_0_in_lcssa_7_reg_580 <= j_0_in_7_cast_reg_1384;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((grp_fu_595_p2 == 1'd1)) begin
            j_0_in_lcssa_reg_387 <= 1'd0;
        end else if ((grp_fu_595_p2 == 1'd0)) begin
            j_0_in_lcssa_reg_387 <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_4_fu_682_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        inputArray_addr_10_reg_1138 <= tmp_2_4_fu_688_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_4_1_fu_717_p2 == 1'd1) & (grp_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        inputArray_addr_12_reg_1166 <= tmp_2_4_1_fu_722_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_4_2_fu_737_p2 == 1'd1) & (grp_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        inputArray_addr_13_reg_1184 <= tmp_2_4_2_fu_742_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_5_fu_786_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        inputArray_addr_17_reg_1229 <= tmp_2_5_fu_792_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_5_1_fu_811_p2 == 1'd1) & (grp_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
        inputArray_addr_19_reg_1248 <= tmp_2_5_1_fu_816_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_5_2_fu_835_p2 == 1'd1) & (grp_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        inputArray_addr_20_reg_1271 <= tmp_2_5_2_fu_840_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_6_fu_884_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        inputArray_addr_24_reg_1316 <= tmp_2_6_fu_890_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_6_1_fu_909_p2 == 1'd1) & (grp_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
        inputArray_addr_26_reg_1335 <= tmp_2_6_1_fu_914_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_6_2_fu_929_p2 == 1'd1) & (grp_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        inputArray_addr_27_reg_1354 <= tmp_2_6_2_fu_934_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_7_fu_982_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        inputArray_addr_31_reg_1398 <= tmp_2_7_fu_988_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_626_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
        inputArray_addr_33_reg_1412 <= tmp_2_7_1_fu_1008_p1;
        j_7_1_reg_1407 <= j_7_1_fu_998_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_626_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        inputArray_addr_34_reg_1431 <= tmp_2_7_2_fu_1026_p1;
        j_7_2_reg_1426 <= j_7_2_fu_1016_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        j_0_in_4_cast_reg_1123 <= j_0_in_4_cast_fu_668_p1;
        j_4_reg_1128 <= j_4_fu_672_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        j_0_in_5_cast_reg_1214 <= j_0_in_5_cast_fu_772_p1;
        j_5_reg_1219 <= j_5_fu_776_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        j_0_in_6_cast_reg_1301 <= j_0_in_6_cast_fu_870_p1;
        j_6_reg_1306 <= j_6_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        j_0_in_7_cast_reg_1384[3 : 0] <= j_0_in_7_cast_fu_964_p1[3 : 0];
        j_7_cast3_reg_1390 <= j_7_cast3_fu_974_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        j_4_1_cast_reg_1158 <= j_4_1_cast_fu_711_p2;
        j_4_1_reg_1152 <= j_4_1_fu_701_p2;
        tmp_4_reg_1147 <= tmp_4_fu_697_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        j_4_2_reg_1175 <= j_4_2_fu_727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        j_4_3_reg_1193 <= j_4_3_fu_747_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
        j_5_1_reg_1238 <= j_5_1_fu_801_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        j_5_2_reg_1262 <= j_5_2_fu_825_p2;
        tmp_5_reg_1257 <= tmp_5_fu_821_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        j_5_3_reg_1280 <= j_5_3_fu_845_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
        j_6_1_reg_1325 <= j_6_1_fu_899_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        j_6_2_reg_1344 <= j_6_2_fu_919_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        j_6_3_reg_1363 <= j_6_3_fu_939_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        j_7_1_cast2_reg_1418 <= j_7_1_cast2_fu_1013_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        j_7_2_cast1_reg_1437 <= j_7_2_cast1_fu_1031_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_626_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        j_7_3_reg_1445 <= j_7_3_fu_1034_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_631 <= inputArray_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_3_1_reg_1074 <= grp_fu_595_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_3_2_1_reg_1091 <= grp_fu_601_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_3_2_reg_1087 <= grp_fu_595_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_3_3_1_reg_1107 <= grp_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_3_3_2_reg_1111 <= grp_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_3_3_reg_1103 <= grp_fu_595_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        inputArray_address0 = inputArray_addr_34_reg_1431;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        inputArray_address0 = inputArray_addr_33_reg_1412;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        inputArray_address0 = inputArray_addr_31_reg_1398;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        inputArray_address0 = tmp_6_7_fu_993_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        inputArray_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        inputArray_address0 = inputArray_addr_27_reg_1354;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        inputArray_address0 = inputArray_addr_26_reg_1335;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        inputArray_address0 = inputArray_addr_24_reg_1316;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        inputArray_address0 = tmp_6_6_fu_895_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        inputArray_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        inputArray_address0 = inputArray_addr_20_reg_1271;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        inputArray_address0 = inputArray_addr_19_reg_1248;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        inputArray_address0 = inputArray_addr_17_reg_1229;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        inputArray_address0 = tmp_6_5_fu_797_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        inputArray_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        inputArray_address0 = inputArray_addr_13_reg_1184;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        inputArray_address0 = inputArray_addr_12_reg_1166;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        inputArray_address0 = inputArray_addr_10_reg_1138;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        inputArray_address0 = tmp_6_4_fu_693_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        inputArray_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        inputArray_address0 = inputArray_addr_7_reg_1098;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        inputArray_address0 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state15))) begin
        inputArray_address0 = inputArray_addr_5_reg_1081;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        inputArray_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state10))) begin
        inputArray_address0 = inputArray_addr_3_reg_1068;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        inputArray_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        inputArray_address0 = inputArray_addr_reg_1054;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        inputArray_address0 = 64'd1;
    end else begin
        inputArray_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        inputArray_address1 = tmp_4_7_fu_1049_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        inputArray_address1 = tmp_2_7_3_fu_1044_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        inputArray_address1 = tmp_2_7_2_fu_1026_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        inputArray_address1 = tmp_2_7_1_fu_1008_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        inputArray_address1 = tmp_2_7_fu_988_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        inputArray_address1 = tmp_4_6_fu_959_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        inputArray_address1 = tmp_2_6_3_fu_954_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        inputArray_address1 = tmp_2_6_2_fu_934_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        inputArray_address1 = tmp_2_6_1_fu_914_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        inputArray_address1 = tmp_2_6_fu_890_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        inputArray_address1 = tmp_4_5_fu_865_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        inputArray_address1 = tmp_2_5_3_fu_860_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        inputArray_address1 = tmp_2_5_2_fu_840_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        inputArray_address1 = tmp_2_5_1_fu_816_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        inputArray_address1 = tmp_2_5_fu_792_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        inputArray_address1 = tmp_4_4_fu_767_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        inputArray_address1 = tmp_2_4_3_fu_762_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        inputArray_address1 = tmp_2_4_2_fu_742_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        inputArray_address1 = tmp_2_4_1_fu_722_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        inputArray_address1 = tmp_2_4_fu_688_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        inputArray_address1 = tmp_4_3_fu_663_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        inputArray_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        inputArray_address1 = tmp_4_2_fu_658_p1;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state14))) begin
        inputArray_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        inputArray_address1 = tmp_4_1_fu_653_p1;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state10))) begin
        inputArray_address1 = inputArray_addr_1_reg_1060;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state4))) begin
        inputArray_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        inputArray_address1 = tmp_4_s_fu_642_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        inputArray_address1 = 64'd0;
    end else begin
        inputArray_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state14) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        inputArray_ce0 = 1'b1;
    end else begin
        inputArray_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state14) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        inputArray_ce1 = 1'b1;
    end else begin
        inputArray_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (grp_fu_595_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state5) & (grp_fu_595_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (grp_fu_595_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state17) & (tmp_3_3_2_reg_1111 == 1'd1) & (tmp_3_3_1_reg_1107 == 1'd1) & (grp_fu_606_p2 == 1'd1) & (tmp_3_3_reg_1103 == 1'd1)) | ((1'b1 == ap_CS_fsm_state11) & (tmp_3_2_1_reg_1091 == 1'd1) & (grp_fu_601_p2 == 1'd1) & (tmp_3_2_reg_1087 == 1'd1)) | ((tmp_3_1_1_fu_647_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6) & (tmp_3_1_reg_1074 == 1'd1)) | ((grp_fu_626_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)) | ((grp_fu_626_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48)) | ((grp_fu_626_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47)) | ((grp_fu_626_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46)) | ((grp_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41)) | ((grp_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40)) | ((grp_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((grp_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38)) | ((grp_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33)) | ((grp_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32)) | ((grp_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31)) | ((grp_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30)) | ((grp_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25)) | ((grp_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24)) | ((grp_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23)) | ((grp_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22)) | ((1'b1 == ap_CS_fsm_state16) & (grp_fu_606_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state15) & (grp_fu_606_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state10) & (grp_fu_601_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state14) & (grp_fu_595_p2 == 1'd1)))) begin
        inputArray_we0 = 1'b1;
    end else begin
        inputArray_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3))) begin
        inputArray_we1 = 1'b1;
    end else begin
        inputArray_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_fu_595_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (grp_fu_595_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (grp_fu_606_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((tmp_1_4_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((tmp_1_4_1_fu_717_p2 == 1'd1) & (grp_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((tmp_1_4_2_fu_737_p2 == 1'd1) & (grp_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((tmp_1_4_3_fu_757_p2 == 1'd1) & (grp_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((grp_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((tmp_1_5_fu_786_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((tmp_1_5_1_fu_811_p2 == 1'd1) & (grp_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((tmp_1_5_2_fu_835_p2 == 1'd1) & (grp_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((tmp_1_5_3_fu_855_p2 == 1'd1) & (grp_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((grp_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((tmp_1_6_fu_884_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((tmp_1_6_1_fu_909_p2 == 1'd1) & (grp_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((tmp_1_6_2_fu_929_p2 == 1'd1) & (grp_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((tmp_1_6_3_fu_949_p2 == 1'd1) & (grp_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((grp_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((tmp_1_7_fu_982_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            if (((grp_fu_626_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state47 : begin
            if (((grp_fu_626_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((grp_fu_626_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((grp_fu_626_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_phi_mux_j_0_in_4_phi_fu_467_p4 = j_0_in_4_reg_463;

assign ap_phi_mux_j_0_in_5_phi_fu_502_p4 = j_0_in_5_reg_498;

assign ap_phi_mux_j_0_in_6_phi_fu_537_p4 = j_0_in_6_reg_533;

assign grp_fu_595_p2 = (($signed(inputArray_q1) > $signed(inputArray_q0)) ? 1'b1 : 1'b0);

assign grp_fu_601_p2 = (($signed(inputArray_q1) > $signed(reg_631)) ? 1'b1 : 1'b0);

assign grp_fu_606_p2 = (($signed(inputArray_q1) > $signed(reg_631)) ? 1'b1 : 1'b0);

assign grp_fu_611_p2 = (($signed(inputArray_q1) > $signed(reg_631)) ? 1'b1 : 1'b0);

assign grp_fu_616_p2 = (($signed(inputArray_q1) > $signed(reg_631)) ? 1'b1 : 1'b0);

assign grp_fu_621_p2 = (($signed(inputArray_q1) > $signed(reg_631)) ? 1'b1 : 1'b0);

assign grp_fu_626_p2 = (($signed(inputArray_q1) > $signed(reg_631)) ? 1'b1 : 1'b0);

assign inputArray_addr_1_reg_1060 = 64'd0;

assign inputArray_addr_3_reg_1068 = 64'd2;

assign inputArray_addr_5_reg_1081 = 64'd3;

assign inputArray_addr_7_reg_1098 = 64'd4;

assign inputArray_addr_reg_1054 = 64'd1;

assign inputArray_d0 = inputArray_q1;

assign inputArray_d1 = reg_631;

assign j_0_in_4_cast_fu_668_p1 = j_0_in_4_reg_463;

assign j_0_in_5_cast_fu_772_p1 = j_0_in_5_reg_498;

assign j_0_in_6_cast_fu_870_p1 = j_0_in_6_reg_533;

assign j_0_in_7_cast_fu_964_p1 = j_0_in_7_reg_568;

assign j_4_1_cast7_fu_707_p1 = j_4_1_fu_701_p2;

assign j_4_1_cast_fu_711_p2 = ($signed(3'd6) + $signed(tmp_4_fu_697_p1));

assign j_4_1_fu_701_p2 = ($signed(4'd14) + $signed(j_0_in_4_reg_463));

assign j_4_2_cast6_fu_733_p1 = j_4_2_fu_727_p2;

assign j_4_2_fu_727_p2 = ($signed(j_0_in_4_reg_463) + $signed(4'd13));

assign j_4_3_cast_fu_753_p1 = j_4_3_fu_747_p2;

assign j_4_3_fu_747_p2 = ($signed(j_0_in_4_reg_463) + $signed(4'd12));

assign j_4_cast_fu_678_p1 = j_4_fu_672_p2;

assign j_4_fu_672_p2 = ($signed(j_0_in_4_reg_463) + $signed(4'd15));

assign j_5_1_cast_fu_807_p1 = j_5_1_fu_801_p2;

assign j_5_1_fu_801_p2 = ($signed(j_0_in_5_reg_498) + $signed(4'd14));

assign j_5_2_cast5_fu_831_p1 = j_5_2_fu_825_p2;

assign j_5_2_fu_825_p2 = ($signed(4'd13) + $signed(j_0_in_5_reg_498));

assign j_5_3_cast_fu_851_p1 = j_5_3_fu_845_p2;

assign j_5_3_fu_845_p2 = ($signed(j_0_in_5_reg_498) + $signed(4'd12));

assign j_5_cast_fu_782_p1 = j_5_fu_776_p2;

assign j_5_fu_776_p2 = ($signed(j_0_in_5_reg_498) + $signed(4'd15));

assign j_6_1_cast_fu_905_p1 = j_6_1_fu_899_p2;

assign j_6_1_fu_899_p2 = ($signed(j_0_in_6_reg_533) + $signed(4'd14));

assign j_6_2_cast_fu_925_p1 = j_6_2_fu_919_p2;

assign j_6_2_fu_919_p2 = ($signed(j_0_in_6_reg_533) + $signed(4'd13));

assign j_6_3_cast_fu_945_p1 = j_6_3_fu_939_p2;

assign j_6_3_fu_939_p2 = ($signed(j_0_in_6_reg_533) + $signed(4'd12));

assign j_6_cast_fu_880_p1 = j_6_fu_874_p2;

assign j_6_fu_874_p2 = ($signed(j_0_in_6_reg_533) + $signed(4'd15));

assign j_7_1_cast2_fu_1013_p1 = j_7_1_reg_1407;

assign j_7_1_cast_fu_1004_p1 = j_7_1_fu_998_p2;

assign j_7_1_fu_998_p2 = ($signed(j_0_in_7_reg_568) + $signed(4'd14));

assign j_7_2_cast1_fu_1031_p1 = j_7_2_reg_1426;

assign j_7_2_cast_fu_1022_p1 = j_7_2_fu_1016_p2;

assign j_7_2_fu_1016_p2 = ($signed(j_0_in_7_reg_568) + $signed(4'd13));

assign j_7_3_cast_fu_1040_p1 = j_7_3_fu_1034_p2;

assign j_7_3_fu_1034_p2 = ($signed(j_0_in_7_reg_568) + $signed(4'd12));

assign j_7_cast3_fu_974_p1 = j_7_fu_968_p2;

assign j_7_cast_fu_978_p1 = j_7_fu_968_p2;

assign j_7_fu_968_p2 = ($signed(j_0_in_7_reg_568) + $signed(4'd15));

assign tmp_1_4_1_fu_717_p2 = (($signed(j_4_reg_1128) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign tmp_1_4_2_fu_737_p2 = (($signed(j_4_1_cast_reg_1158) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign tmp_1_4_3_fu_757_p2 = (($signed(tmp_4_reg_1147) < $signed(3'd7)) ? 1'b1 : 1'b0);

assign tmp_1_4_fu_682_p2 = (($signed(j_0_in_4_reg_463) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign tmp_1_5_1_fu_811_p2 = (($signed(j_5_reg_1219) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign tmp_1_5_2_fu_835_p2 = (($signed(j_5_1_reg_1238) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign tmp_1_5_3_fu_855_p2 = (($signed(tmp_5_reg_1257) < $signed(3'd7)) ? 1'b1 : 1'b0);

assign tmp_1_5_fu_786_p2 = (($signed(j_0_in_5_reg_498) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign tmp_1_6_1_fu_909_p2 = (($signed(j_6_reg_1306) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign tmp_1_6_2_fu_929_p2 = (($signed(j_6_1_reg_1325) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign tmp_1_6_3_fu_949_p2 = (($signed(j_6_2_reg_1344) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign tmp_1_6_fu_884_p2 = (($signed(j_0_in_6_reg_533) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign tmp_1_7_fu_982_p2 = ((j_0_in_7_reg_568 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_2_4_1_fu_722_p1 = $unsigned(j_4_1_cast7_fu_707_p1);

assign tmp_2_4_2_fu_742_p1 = $unsigned(j_4_2_cast6_fu_733_p1);

assign tmp_2_4_3_fu_762_p1 = $unsigned(j_4_3_cast_fu_753_p1);

assign tmp_2_4_fu_688_p1 = $unsigned(j_4_cast_fu_678_p1);

assign tmp_2_5_1_fu_816_p1 = $unsigned(j_5_1_cast_fu_807_p1);

assign tmp_2_5_2_fu_840_p1 = $unsigned(j_5_2_cast5_fu_831_p1);

assign tmp_2_5_3_fu_860_p1 = $unsigned(j_5_3_cast_fu_851_p1);

assign tmp_2_5_fu_792_p1 = $unsigned(j_5_cast_fu_782_p1);

assign tmp_2_6_1_fu_914_p1 = $unsigned(j_6_1_cast_fu_905_p1);

assign tmp_2_6_2_fu_934_p1 = $unsigned(j_6_2_cast_fu_925_p1);

assign tmp_2_6_3_fu_954_p1 = $unsigned(j_6_3_cast_fu_945_p1);

assign tmp_2_6_fu_890_p1 = $unsigned(j_6_cast_fu_880_p1);

assign tmp_2_7_1_fu_1008_p1 = $unsigned(j_7_1_cast_fu_1004_p1);

assign tmp_2_7_2_fu_1026_p1 = $unsigned(j_7_2_cast_fu_1022_p1);

assign tmp_2_7_3_fu_1044_p1 = $unsigned(j_7_3_cast_fu_1040_p1);

assign tmp_2_7_fu_988_p1 = $unsigned(j_7_cast_fu_978_p1);

assign tmp_3_1_1_fu_647_p2 = (($signed(inputArray_q1) > $signed(reg_631)) ? 1'b1 : 1'b0);

assign tmp_4_1_fu_653_p1 = j_0_in_lcssa_1_reg_400;

assign tmp_4_2_fu_658_p1 = j_0_in_lcssa_2_reg_417;

assign tmp_4_3_fu_663_p1 = j_0_in_lcssa_3_reg_438;

assign tmp_4_4_fu_767_p1 = $signed(j_0_in_lcssa_4_reg_475);

assign tmp_4_5_fu_865_p1 = $signed(j_0_in_lcssa_5_reg_510);

assign tmp_4_6_fu_959_p1 = $signed(j_0_in_lcssa_6_reg_545);

assign tmp_4_7_fu_1049_p1 = $signed(j_0_in_lcssa_7_reg_580);

assign tmp_4_fu_697_p1 = j_0_in_4_reg_463[2:0];

assign tmp_4_s_fu_642_p1 = j_0_in_lcssa_reg_387;

assign tmp_5_fu_821_p1 = j_0_in_5_reg_498[2:0];

assign tmp_6_4_fu_693_p1 = $unsigned(j_0_in_4_cast_reg_1123);

assign tmp_6_5_fu_797_p1 = $unsigned(j_0_in_5_cast_reg_1214);

assign tmp_6_6_fu_895_p1 = $unsigned(j_0_in_6_cast_reg_1301);

assign tmp_6_7_fu_993_p1 = j_0_in_7_reg_568;

always @ (posedge ap_clk) begin
    j_0_in_7_cast_reg_1384[4] <= 1'b0;
end

endmodule //insertionSort
